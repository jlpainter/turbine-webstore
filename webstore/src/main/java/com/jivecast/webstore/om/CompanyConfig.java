/*
 *  ------------------------------------------------------------------
 *  JiveCast
 *  301 Fayetteville St Unit 2301
 *  Raleigh, NC 27601
 *  https://jivecast.com
 *
 *  Copyright (c) 2018-2025 JiveCast. All Rights Reserved.
 *
 *  THE PROGRAM IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 *  EITHER EXPRESSED OR IMPLIED, INCLUDING, WITHOUT
 *  LIMITATION, WARRANTIES THAT THE PROGRAM IS FREE OF
 *  DEFECTS, MERCHANTABLE, FIT FOR A PARTICULAR PURPOSE OR
 *  NON-INFRINGING. THE ENTIRE RISK AS TO THE QUALITY AND
 *  PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD ANY PART
 *  OF THE PROGRAM PROVE DEFECTIVE IN ANY RESPECT, YOU
 *  (NOT JIVECAST) ASSUME THE COST OF ANY NECESSARY SERVICING,
 *  REPAIR OR CORRECTION. THIS DISCLAIMER OF WARRANTY CONSTITUTES
 *  AN ESSENTIAL PART OF THIS LICENSE. NO USE OF
 *  THE PROGRAM IS AUTHORIZED HEREUNDER EXCEPT
 *  UNDER THIS DISCLAIMER.
 *
 *  ------------------------------------------------------------------
 */

package com.jivecast.webstore.om;

import java.util.List;

import org.apache.commons.lang3.StringUtils;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.apache.torque.criteria.Criteria;

/**
 * The skeleton for this class was autogenerated by Torque on:
 *
 * [Mon Apr 20 09:04:32 EDT 2020]
 *
 * You should add additional methods to this class to meet the application
 * requirements. This class will only be generated as long as it does not
 * already exist in the output directory.
 */

public class CompanyConfig extends com.jivecast.webstore.om.BaseCompanyConfig {
	/** Serial version */
	private static final long serialVersionUID = 1587387872166L;

	private static Log log = LogFactory.getLog(CompanyConfig.class);

	/**
	 * Should only be a single billing config for the app
	 * 
	 * @return
	 */
	public static CompanyConfig getDefault() {

		try {
			// List all products in alpha order
			Criteria criteria = new Criteria();
			List<CompanyConfig> configList = (List<CompanyConfig>) CompanyConfigPeer.doSelect(criteria);
			if (configList.size() == 1)
				return configList.get(0);
			else {
				log.error("Could not locate default config, configs found: " + configList.size());
				return null;
			}
		} catch (Exception e) {
			return null;
		}
	}
	
	/**
	 * Do we have a logo?
	 * @return
	 */
	public boolean hasLogo() {
		if (this.getLogoFile().length > 0)
			return true;
		return false;
	}

	/**
	 * Get shiping information
	 * @return
	 */
	public String getShippingInfo() {
		
		String shipping = new String();
		if (!StringUtils.isEmpty(this.getAddressLine1()))
			shipping = shipping + this.getAddressLine1() + "\n";
		
		if (!StringUtils.isEmpty(this.getAddressLine2()))
			shipping = shipping + this.getAddressLine2() + "\n";
		
		shipping = shipping + this.getCity() + ", " + this.getState() + "\n";
		shipping = shipping + this.getZip() + "\n";
		shipping = shipping + this.getCountry() + "\n";
		return shipping;
	}

}
